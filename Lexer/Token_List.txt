Separator %%
Keyword int
Identifier i
Separator ,
Identifier max
Separator ,
Identifier sum
Separator ;
Keyword int
Identifier fahr
Separator ,
Identifier upper
Separator ,
Identifier alpha
Separator ,
Identifier charlie
Separator ,
Identifier echo
Separator ,
Identifier foxtrot
Separator ,
Identifier golf
Separator ,
Identifier hotel
Separator ,
Identifier idaho
Separator ;
Keyword boolean
Identifier bravo
Separator ,
Identifier monkey
Separator ;
Keyword int
Identifier one
Separator ,
Identifier two
Separator ,
Identifier three
Separator ;
Keyword boolean
Identifier four
Separator ;
Keyword int
Identifier five
Separator ,
Identifier six
Separator ,
Identifier seven
Separator ,
Identifier eight
Separator ,
Identifier nine
Separator ;
Identifier bravo
Operator =
Identifier monkey
Separator ;
Identifier monkey
Operator =
Identifier bravo
Separator ;
Identifier sum
Operator =
Integer 0
Separator ;
Identifier i
Operator =
Integer 1
Separator ;
Keyword get
Separator (
Identifier max
Separator )
Separator ;
Keyword while
Separator (
Identifier i
Operator <
Identifier max
Separator )
Separator {
Identifier sum
Operator =
Identifier sum
Operator +
Identifier i
Separator ;
Identifier i
Operator =
Identifier i
Operator +
Integer 1
Separator ;
Separator }
Keyword put
Separator (
Identifier sum
Operator +
Identifier max
Separator )
Separator ;
Keyword if
Separator (
Identifier bravo
Operator ==
Identifier bravo
Separator )
Identifier bravo
Operator =
Keyword true
Separator ;
Keyword endif
Keyword get
Separator (
Identifier one
Separator ,
Identifier two
Separator ,
Identifier three
Separator ,
Identifier four
Separator ,
Identifier five
Separator ,
Identifier six
Separator ,
Identifier seven
Separator ,
Identifier eight
Separator ,
Identifier nine
Separator )
Separator ;
Keyword put
Separator (
Identifier test3$
Operator +
Identifier one
Separator )
Separator ;
Identifier fahr
Operator =
Integer 0
Separator ;
Identifier upper
Operator =
Integer 0
Separator ;
Keyword while
Separator (
Identifier fahr
Operator <
Identifier upper
Separator )
Identifier alpha
Operator =
Integer 23
Separator ;
Identifier bravo
Operator =
Keyword false
Separator ;
Keyword if
Separator (
Identifier bravo
Operator ==
Keyword false
Separator )
Identifier bravo
Operator =
Keyword true
Separator ;
Keyword endif
Identifier charlie
Operator =
Integer 23
Operator +
Integer 34
Separator ;
Identifier echo
Operator =
Separator (
Integer 13
Separator )
Operator *
Separator (
Integer 324
Separator )
Separator ;
Identifier foxtrot
Operator =
Identifier echo
Operator /
Integer 2
Separator ;
Keyword if
Separator (
Identifier echo
Operator <
Identifier foxtrot
Separator )
Identifier echo
Operator =
Integer 0
Separator ;
Keyword endif
Identifier idaho
Operator =
Identifier golf
Operator -
Identifier hotel
Separator ;
Identifier fahr
Operator =
Integer 0
Separator ;
Identifier upper
Operator =
Integer 0
Separator ;
Keyword while
Separator (
Identifier fahr
Operator <
Identifier upper
Separator )
Identifier alpha
Operator =
Integer 23
Separator ;
Identifier bravo
Operator =
Keyword false
Separator ;
Keyword if
Separator (
Identifier bravo
Operator ==
Keyword false
Separator )
Identifier bravo
Operator =
Keyword true
Separator ;
Keyword endif
Identifier charlie
Operator =
Integer 23
Operator +
Integer 34
Separator ;
Identifier echo
Operator =
Separator (
Integer 13
Separator )
Operator *
Separator (
Integer 324
Separator )
Separator ;
Identifier foxtrot
Operator =
Identifier echo
Operator /
Integer 2
Separator ;
Keyword if
Separator (
Identifier echo
Operator <
Identifier foxtrot
Separator )
Identifier echo
Operator =
Integer 0
Separator ;
Keyword endif
Identifier idaho
Operator =
Identifier golf
Operator -
Identifier hotel
Separator ;
